# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# ----------------------------------------------------------
# WARNING: This file is autogenerated. Do not manually edit.
# ----------------------------------------------------------

apiVersion: apps/v1
kind: Deployment
metadata:
  name: boutique-emailservice
  annotations:
    ves.io/workload-flavor: "ves-io-medium"
spec:
  selector:
    matchLabels:
      app: boutique-emailservice
  template:
    metadata:
      labels:
        app: boutique-emailservice
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: gcr.io/google-samples/microservices-demo/emailservice:v0.3.6
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        - name: DISABLE_TRACING
          value: "1"
        - name: DISABLE_PROFILER
          value: "1"
        readinessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8080"]
        livenessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8080"]
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: boutique-emailservice
spec:
  type: ClusterIP
  selector:
    app: boutique-emailservice
  ports:
  - name: grpc
    port: 5000
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: boutique-checkoutservice
  annotations:
    ves.io/workload-flavor: "ves-io-medium"
spec:
  selector:
    matchLabels:
      app: boutique-checkoutservice
  template:
    metadata:
      labels:
        app: boutique-checkoutservice
    spec:
      serviceAccountName: default
      containers:
        - name: server
          image: gcr.io/google-samples/microservices-demo/checkoutservice:v0.3.6
          ports:
          - containerPort: 5050
          readinessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:5050"]
          livenessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:5050"]
          env:
          - name: PORT
            value: "5050"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: "boutique-productcatalogservice:3550"
          - name: SHIPPING_SERVICE_ADDR
            value: "boutique-shippingservice:50051"
          - name: PAYMENT_SERVICE_ADDR
            value: "boutique-paymentservice:50051"
          - name: EMAIL_SERVICE_ADDR
            value: "boutique-emailservice:5000"
          - name: CURRENCY_SERVICE_ADDR
            value: "boutique-currencyservice:7000"
          - name: CART_SERVICE_ADDR
            value: "boutique-cartservice:7070"
          - name: DISABLE_STATS
            value: "1"
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          # - name: JAEGER_SERVICE_ADDR
          #   value: "jaeger-collector:14268"
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: boutique-checkoutservice
spec:
  type: ClusterIP
  selector:
    app: boutique-checkoutservice
  ports:
  - name: grpc
    port: 5050
    targetPort: 5050
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: boutique-recommendationservice
  annotations:
    ves.io/workload-flavor: "ves-io-medium"
spec:
  selector:
    matchLabels:
      app: boutique-recommendationservice
  template:
    metadata:
      labels:
        app: boutique-recommendationservice
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: gcr.io/google-samples/microservices-demo/recommendationservice:v0.3.6
        ports:
        - containerPort: 8080
        readinessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8080"]
        livenessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8080"]
        env:
        - name: PORT
          value: "8080"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: "boutique-productcatalogservice:3550"
        - name: DISABLE_TRACING
          value: "1"
        - name: DISABLE_PROFILER
          value: "1"
        - name: DISABLE_DEBUGGER
          value: "1"
        resources:
          requests:
            cpu: 100m
            memory: 220Mi
          limits:
            cpu: 200m
            memory: 450Mi
---
apiVersion: v1
kind: Service
metadata:
  name: boutique-recommendationservice
spec:
  type: ClusterIP
  selector:
    app: boutique-recommendationservice
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: boutique-frontend
spec:
  selector:
    matchLabels:
      app: boutique-frontend
  template:
    metadata:
      labels:
        app: boutique-frontend
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      serviceAccountName: default
      containers:
        - name: server
          image: gcr.io/solutions-team-280017/boutique-frontend:v0.3.6
          ports:
          - containerPort: 8080
          readinessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: "/_healthz"
              port: 8080
              httpHeaders:
              - name: "Cookie"
                value: "shop_session-id=x-readiness-probe"
          livenessProbe:
            initialDelaySeconds: 10
            httpGet:
              path: "/_healthz"
              port: 8080
              httpHeaders:
              - name: "Cookie"
                value: "shop_session-id=x-liveness-probe"
          env:
          - name: PORT
            value: "8080"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: "boutique-productcatalogservice:3550"
          - name: CURRENCY_SERVICE_ADDR
            value: "boutique-currencyservice:7000"
          - name: CART_SERVICE_ADDR
            value: "boutique-cartservice:7070"
          - name: RECOMMENDATION_SERVICE_ADDR
            value: "boutique-recommendationservice:8080"
          - name: SHIPPING_SERVICE_ADDR
            value: "boutique-shippingservice:50051"
          - name: CHECKOUT_SERVICE_ADDR
            value: "boutique-checkoutservice:5050"
          - name: AD_SERVICE_ADDR
            value: "boutique-adservice:9555"
          # # ENV_PLATFORM: One of: local, gcp, aws, azure, onprem, alibaba, f5xc
          # # When not set, defaults to "local" unless running in GKE, otherwies auto-sets to gcp 
          - name: ENV_PLATFORM 
            value: "f5xc"
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          # - name: JAEGER_SERVICE_ADDR
          #   value: "jaeger-collector:14268"
          # - name: CYMBAL_BRANDING
          #   value: "true"
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: boutique-frontend
spec:
  type: ClusterIP
  selector:
    app: boutique-frontend
  ports:
  - name: http
    port: 80
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: boutique-paymentservice
  annotations:
    ves.io/workload-flavor: "ves-io-medium"
spec:
  selector:
    matchLabels:
      app: boutique-paymentservice
  template:
    metadata:
      labels:
        app: boutique-paymentservice
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: gcr.io/google-samples/microservices-demo/paymentservice:v0.3.6
        ports:
        - containerPort: 50051
        env:
        - name: PORT
          value: "50051"
        - name: DISABLE_TRACING
          value: "1"
        - name: DISABLE_PROFILER
          value: "1"
        - name: DISABLE_DEBUGGER
          value: "1"
        readinessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:50051"]
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:50051"]
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: boutique-paymentservice
spec:
  type: ClusterIP
  selector:
    app: boutique-paymentservice
  ports:
  - name: grpc
    port: 50051
    targetPort: 50051
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: boutique-productcatalogservice
  annotations:
    ves.io/workload-flavor: "ves-io-medium"
spec:
  selector:
    matchLabels:
      app: boutique-productcatalogservice
  template:
    metadata:
      labels:
        app: boutique-productcatalogservice
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: gcr.io/google-samples/microservices-demo/productcatalogservice:v0.3.6
        ports:
        - containerPort: 3550
        env:
        - name: PORT
          value: "3550"
        - name: DISABLE_STATS
          value: "1"
        - name: DISABLE_TRACING
          value: "1"
        - name: DISABLE_PROFILER
          value: "1"
        # - name: JAEGER_SERVICE_ADDR
        #   value: "jaeger-collector:14268"
        readinessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:3550"]
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:3550"]
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: boutique-productcatalogservice
spec:
  type: ClusterIP
  selector:
    app: boutique-productcatalogservice
  ports:
  - name: grpc
    port: 3550
    targetPort: 3550
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: boutique-cartservice
  annotations:
    ves.io/workload-flavor: "ves-io-medium"
spec:
  selector:
    matchLabels:
      app: boutique-cartservice
  template:
    metadata:
      labels:
        app: boutique-cartservice
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: gcr.io/google-samples/microservices-demo/cartservice:v0.3.6
        ports:
        - containerPort: 7070
        env:
        - name: REDIS_ADDR
          value: "boutique-redis-cart:6379"
        resources:
          requests:
            cpu: 200m
            memory: 64Mi
          limits:
            cpu: 300m
            memory: 128Mi
        readinessProbe:
          initialDelaySeconds: 15
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:7070", "-rpc-timeout=5s"]
        livenessProbe:
          initialDelaySeconds: 15
          periodSeconds: 10
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:7070", "-rpc-timeout=5s"]
---
apiVersion: v1
kind: Service
metadata:
  name: boutique-cartservice
spec:
  type: ClusterIP
  selector:
    app: boutique-cartservice
  ports:
  - name: grpc
    port: 7070
    targetPort: 7070
---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: boutique-loadgenerator
# spec:
#   selector:
#     matchLabels:
#       app: boutique-loadgenerator
#   replicas: 1
#   template:
#     metadata:
#       labels:
#         app: boutique-loadgenerator
#       annotations:
#         sidecar.istio.io/rewriteAppHTTPProbers: "true"
#     spec:
#       serviceAccountName: default
#       terminationGracePeriodSeconds: 5
#       restartPolicy: Always
#       initContainers:
#       - command:
#         - /bin/sh
#         - -exc
#         - |
#           echo "Init container pinging frontend: ${FRONTEND_ADDR}..."
#           STATUSCODE=$(wget --server-response http://${FRONTEND_ADDR} 2>&1 | awk '/^  HTTP/{print $2}')
#           if test $STATUSCODE -ne 200; then
#               echo "Error: Could not reach frontend - Status code: ${STATUSCODE}"
#               exit 1
#           fi
#         name: frontend-check
#         image: gcr.io/solutions-team-280017/busybox:latest
#         env:
#         - name: FRONTEND_ADDR
#           value: "boutique-frontend:80"
#       containers:
#       - name: main
#         image: gcr.io/google-samples/microservices-demo/loadgenerator:v0.3.6
#         env:
#         - name: FRONTEND_ADDR
#           value: "boutique-frontend:80"
#         - name: USERS
#           value: "10"
#         resources:
#           requests:
#             cpu: 300m
#             memory: 256Mi
#           limits:
#             cpu: 500m
#             memory: 512Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: boutique-currencyservice
  annotations:
    ves.io/workload-flavor: "ves-io-medium"
spec:
  selector:
    matchLabels:
      app: boutique-currencyservice
  template:
    metadata:
      labels:
        app: boutique-currencyservice
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: gcr.io/google-samples/microservices-demo/currencyservice:v0.3.6
        ports:
        - name: grpc
          containerPort: 7000
        env:
        - name: PORT
          value: "7000"
        - name: DISABLE_TRACING
          value: "1"
        - name: DISABLE_PROFILER
          value: "1"
        - name: DISABLE_DEBUGGER
          value: "1"
        readinessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:7000"]
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:7000"]
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: boutique-currencyservice
spec:
  type: ClusterIP
  selector:
    app: boutique-currencyservice
  ports:
  - name: grpc
    port: 7000
    targetPort: 7000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: boutique-shippingservice
  annotations:
    ves.io/workload-flavor: "ves-io-medium"
spec:
  selector:
    matchLabels:
      app: boutique-shippingservice
  template:
    metadata:
      labels:
        app: boutique-shippingservice
    spec:
      serviceAccountName: default
      containers:
      - name: server
        image: gcr.io/google-samples/microservices-demo/shippingservice:v0.3.6
        ports:
        - containerPort: 50051
        env:
        - name: PORT
          value: "50051"
        - name: DISABLE_STATS
          value: "1"
        - name: DISABLE_TRACING
          value: "1"
        - name: DISABLE_PROFILER
          value: "1"
        # - name: JAEGER_SERVICE_ADDR
        #   value: "jaeger-collector:14268"
        readinessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:50051"]
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:50051"]
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: boutique-shippingservice
spec:
  type: ClusterIP
  selector:
    app: boutique-shippingservice
  ports:
  - name: grpc
    port: 50051
    targetPort: 50051
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: boutique-redis-cart
spec:
  selector:
    matchLabels:
      app: boutique-redis-cart
  template:
    metadata:
      labels:
        app: boutique-redis-cart
    spec:
      containers:
      - name: redis
        image: gcr.io/solutions-team-280017/redis:alpine
        ports:
        - containerPort: 6379
        readinessProbe:
          periodSeconds: 5
          tcpSocket:
            port: 6379
        livenessProbe:
          periodSeconds: 5
          tcpSocket:
            port: 6379
        volumeMounts:
        - mountPath: /data
          name: redis-data
        resources:
          limits:
            memory: 256Mi
            cpu: 125m
          requests:
            cpu: 70m
            memory: 200Mi
      volumes:
      - name: redis-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: boutique-redis-cart
spec:
  type: ClusterIP
  selector:
    app: boutique-redis-cart
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: boutique-adservice
  annotations:
    ves.io/workload-flavor: "ves-io-medium"
spec:
  selector:
    matchLabels:
      app: boutique-adservice
  template:
    metadata:
      labels:
        app: boutique-adservice
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: gcr.io/google-samples/microservices-demo/adservice:v0.3.6
        ports:
        - containerPort: 9555
        env:
        - name: PORT
          value: "9555"
        - name: DISABLE_STATS
          value: "1"
        - name: DISABLE_TRACING
          value: "1"
        # - name: JAEGER_SERVICE_ADDR
        #   value: "jaeger-collector:14268"
        resources:
          requests:
            cpu: 200m
            memory: 180Mi
          limits:
            cpu: 300m
            memory: 300Mi
        readinessProbe:
          initialDelaySeconds: 20
          periodSeconds: 15
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:9555"]
        livenessProbe:
          initialDelaySeconds: 20
          periodSeconds: 15
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:9555"]
---
apiVersion: v1
kind: Service
metadata:
  name: boutique-adservice
spec:
  type: ClusterIP
  selector:
    app: boutique-adservice
  ports:
  - name: grpc
    port: 9555
    targetPort: 9555
---
